Create Virtual Environment
$ mkdir pyats
$ cd pyats
$ python3 -m venv .
$ source bin/activate .
(pyats)$
$ pip install --upgrade pip setuptools ## Upgrade pip with the latest setup tool packages:

$ pip install pyats[full] # Install pyATS and the pyATS Library

pyats { --help | -h }

# to check your current pyats version
(pyats)$ pyats version check

# to check if any packages are out-dated
(pyats)$ pyats version check --outdated


$ pip install pyats[full] --upgrade # Updates only the specified library or package
or
pyats version update # Updates the entire pyATS framework and all associated packages


# To test the installation
git clone https://github.com/CiscoTestAutomation/examples
pyats run job examples/basic/basic_example_job.py

# pyats main documentation
https://developer.cisco.com/docs/pyats-getting-started/
https://developer.cisco.com/docs/pyats/introduction/#cisco-pyats-network-test--automation-solution


# intro to pyATS
https://developer.cisco.com/learning/labs/intro-to-pyats/stepping-into-the-realm-of-total-network-automation-with-pyats/

# pyATS sample scripts
https://github.com/CiscoDevNet/pyats-ios-sample
https://github.com/CiscoDevNet/pyats-coding-101
https://github.com/CiscoDevNet/pyats-sample-scripts
https://github.com/CiscoDevNet/ansible-pyats
https://github.com/CiscoDevNet/pyats-gui-sample
https://github.com/CiscoDevNet/pyats-plugin-examples

# github pyATS genie examples
https://github.com/CiscoTestAutomation/genie/tree/main/docs

# use pyATS with ansible
https://developer.cisco.com/learning/labs/04-pyats-parsers/using-pyats-parsers-with-ansible/
