
!!!!!!!!!!!!!!!!!!!!!! 1.bridge !!!!!!!!!!!!!!!!!!!!!!
# Create a bridge network
docker network create mynet

# list docker networks
docker network ls

# Run two containers on it
docker run -dit --name dev1 --network mynet alpine
docker run -dit --name dev2 --network mynet alpine

# Ping from one to the other
docker exec -it dev1 ping dev2

# check details of any docker network. to see to which network a docker is connected
docker network inspect mynet


# connect/disconnect a container to a docker network
docker network disconnect mynet dev1
docker network connect mynet dev1


!!!!!!!!!!!!!!!!!!!!!! 2. host !!!!!!!!!!!!!!!!!!!!!!

docker run --rm --network host alpine ip a

or

docker run -dit --network host --name dev3 alpine
docker exec -it dev3 sh

docker network inspect host


!!!!!!!!!!!!!!!!!!!!!! 3. none !!!!!!!!!!!!!!!!!!!!!!

docker run -dit --name dev4 --network none alpine
docker exec -it dev4 ping 8.8.8.8  # Will fail


!!!!!!!!!!!!!!!!!!!!!! 4. macvlan (Real IPs on your LAN) !!!!!!!!!!!!!!!!!!!!!!

docker network create -d macvlan \
  --subnet=192.168.1.0/24 \
  --gateway=192.168.1.1 \
  -o parent=ens160 \
  my_macvlan

docker run -dit --name dev5 --network my_macvlan alpine

docker exec -it dev5 sh


docker network connect my_macvlan dev1
docker inspect my_macvlan
docker exec -it dev4 sh --> ip a


!!!!!!!!!!!!!!!!!!!!!! 5. overlay on a single host in lab !!!!!!!!!!!!!!!!!!!!!!
1. Initialize Swarm (even on a single host)
docker swarm init


2. Create an Overlay Network
docker network create \
  --driver overlay \
  --attachable \
  my_overlay


3. Connect existing containers to my_overlay
docker network connect my_overlay dev1
docker network connect my_overlay dev2

4. Test connectivity between them
docker exec -it dev1 sh
# Inside dev1:
ping dev2


!!!!!!!!!!!!!!!!!!!!!! 5. overlay on multi host environment  !!!!!!!!!!!!!!!!!!!!!!
1. Initialize Docker Swarm on Host 1
docker swarm init --advertise-addr <host1-ip>

docker info | grep 'Swarm:'
# Should say: Swarm: active

On Host1, get the join token (if you donâ€™t have it anymore):
docker swarm join-token worker


2. Join Swarm from Host 2
docker swarm join --token <token> <host1-ip>:2377

host1:
docker node ls

both hosts:
docker network ls


3. Create Overlay Network (on any Swarm node)
docker network create \
  --driver overlay \
  --attachable \
  my_overlay


docker network ls


4. Run containers on both hosts
On Host 1:
docker run -dit --name dev5 --network my_overlay alpine


On Host 2:
docker run -dit --name dev6 --network my_overlay alpine


5. Test Connectivity Between Hosts
docker exec -it dev1 ping dev2
docker inspect dev2
ping <dev2-ip>



!!!!!!!!!!!!!!!!!!!! other commands
## docker can be connected to multiple network and it is normal

docker stop $(docker ps -q)
docker rm -f $(docker ps -aq)

docker network rm mynet

docker network prune # delete all unused networks




