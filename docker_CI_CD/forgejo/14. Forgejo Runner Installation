
# https://forgejo.org/docs/latest/admin/actions/runner-installation/#oci-image-installation
# as root, first prepare a data directory with non-root permissions (in this case, we pick 1001:1001):

majid@forgejo-runner:~/training$ cat setup.sh
#!/usr/bin/env bash

set -e

mkdir -p data
touch data/.runner
mkdir -p data/.cache

chown -R 1001:1001 data/.runner
chown -R 1001:1001 data/.cache
chmod 775 data/.runner
chmod 775 data/.cache
chmod g+s data/.runner
chmod g+s data/.cache

majid@forgejo-runner:~/training$ chmod +x setup.sh
majid@forgejo-runner:~/training$ sudo ./setup.sh
majid@forgejo-runner:~/training$ ls
data  setup.sh
majid@forgejo-runner:~/training$

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
majid@forgejo-runner:~/training$ cat docker-compose.yml
services:
  docker-in-docker:
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://localhost:2375
    container_name: 'docker_dind'
    privileged: 'true'
    command: ['dockerd', '-H', 'tcp://0.0.0.0:2375', '--tls=false']
    restart: 'unless-stopped'

  forgejo:
    image: 'data.forgejo.org/forgejo/runner:11'
    links:
      - docker-in-docker
    depends_on:
      docker-in-docker:
        condition: service_started
    container_name: 'runner'
    environment:
      DOCKER_HOST: tcp://docker-in-docker:2375
    # User without root privileges, but with access to `./data`.
    user: 1001:1001
    volumes:
      - ./data:/data
    restart: 'unless-stopped'

    command: '/bin/sh -c "while : ; do sleep 1 ; done ;"'
    # command: '/bin/sh -c "sleep 5; forgejo-runner daemon"'


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# copy token from forgejo controller through GUI
https://forgejo.rayka-co.com/user/settings/actions/runners
https://forgejo.rayka-co.com/ --> settings --> actions --> runners --> create new runner --> registration token
DDXAJq6zk3COxtI2ZzwCb7PiYFJeQBLmXHVnUUFH
!


majid@forgejo-runner:~/training$ docker-compose up -d
Creating network "training_default" with the default driver
Creating docker_dind ... done
Creating runner      ... done
majid@forgejo-runner:~/training$ docker exec -it runner /bin/sh
~ $ forgejo-runner register
INFO Registering runner, arch=amd64, os=linux, version=v11.0.0.
WARN Runner in user-mode.
INFO Runner is already registered, overwrite local config? [y/N]
y
INFO Enter the Forgejo instance URL (for example, https://next.forgejo.org/):
http://10.13.14.30:3000
INFO Enter the runner token:
DDXAJq6zk3COxtI2ZzwCb7PiYFJeQBLmXHVnUUFH
INFO Enter the runner name (if set empty, use hostname: 6d35eb7e69c0):
forgejo-runner
INFO Enter the runner labels, leave blank to use the default labels (comma-separated, for example, ubuntu-20.04:docker://node:20-bookworm,ubuntu-18.04:docker://node:20-bookworm):
devnet:docker://masadpoor/devnet:latest
INFO Registering runner, name=forgejo-runner, instance=http://10.13.14.30:3000, labels=[devnet:docker://masadpoor/devnet:latest].
DEBU Successfully pinged the Forgejo instance server
INFO Runner registered successfully.
~ $

## summary
# copy token from forgejo controller through GUI
docker-compose up -d
docker exec -it runner /bin/sh
forgejo-runner register
Forgejo instance URL: http://10.13.14.30:3000
runner token: DDXAJq6zk3COxtI2ZzwCb7PiYFJeQBLmXHVnUUFH
runner labels: devnet:docker://masadpoor/devnet:latest
# if you check inside forgejo controller, you see the connectivizy is stablished but status is still offline
# After that is done, take the service down again with "docker-compose down" and modify the last line in docker-compose.yml:
from 
    # command: '/bin/sh -c "while : ; do sleep 1 ; done ;"'
to
    command: '/bin/sh -c "sleep 5; forgejo-runner daemon"'
# Here, the sleep allows the docker-in-docker service to start up before the forgejo-runner daemon is started.
# then run "docker compose up -d" again

